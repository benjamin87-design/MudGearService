@using System.Collections.ObjectModel

<MudDialog Style="height: 750px; width: 400px;">
    <DialogContent>
        <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles">
            <ActivatorContent>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.Upload">
                    Upload Profil Picture
                </MudButton>
            </ActivatorContent>
        </MudFileUpload>

        <div style="height: 16px;"></div>

        <MudTextField @bind-Value="UserFamilyName" Label="Family Name" Variant="Variant.Text"></MudTextField>
        <div style="height: 10px;"></div>
        <MudTextField @bind-Value="UserGivenName" Label="Given Name" Variant="Variant.Text"></MudTextField>
        <div style="height: 10px;"></div>
        <MudTextField @bind-Value="UserPhone" Label="Phone Number" Variant="Variant.Text"></MudTextField>
        <div style="height: 10px;"></div>
        <MudTextField @bind-Value="UserEmail" Label="Email Adress" Variant="Variant.Text"></MudTextField>
        <div style="height: 10px;"></div>
        <MudTextField @bind-Value="UserStreetName" Label="Street Name" Variant="Variant.Text"></MudTextField>
        <div style="height: 10px;"></div>
        <MudTextField @bind-Value="UserStreetNumber" Label="Street Number" Variant="Variant.Text"></MudTextField>
        <div style="height: 10px;"></div>
        <MudTextField @bind-Value="UserZIPCode" Label="ZIP Code" Variant="Variant.Text"></MudTextField>
        <div style="height: 10px;"></div>
        <MudTextField @bind-Value="UserCity" Label="City" Variant="Variant.Text"></MudTextField>
        <div style="height: 10px;"></div>
        <MudTextField @bind-Value="UserCountry" Label="Country" Variant="Variant.Text"></MudTextField>

    </DialogContent>

    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Ok">Save</MudButton>
    </DialogActions>

</MudDialog>

@code {
    private int ID { get; set; }
    private string? UserFamilyName { get; set; }
    private string? UserGivenName{ get; set; }
    private string? UserPhone { get; set; }
    private string? UserEmail { get; set; }
    private string? UserStreetName { get; set; }
    private string? UserStreetNumber { get; set; }
    private string? UserZIPCode { get; set; }
    private string? UserCity { get; set; }
    private string? UserCountry { get; set; }
    private string? UserProfilImage { get; set; }

    private string ProfilPicName{ get; set; }
    private string ProfilePicPath{ get; set; }

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    //List
    private ObservableCollection<UserModel> Users;

    //supabase client
    private Supabase.Client supabase;

    protected async override void OnInitialized()
    {
        supabase = new Supabase.Client("https://uxgxzfhyhzhrjboxjcrz.supabase.co", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InV4Z3h6Zmh5aHpocmpib3hqY3J6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjU0MTQ5NTIsImV4cCI6MjA0MDk5MDk1Mn0.cevff5000JUf4r0QE7Xij2viCdJhE-u1x8HbqPD8SK8");
        await LoadUser();
    }

    //Load user data from supabase
    private async Task LoadUser()
    {
        var result = await supabase.From<UserModel>().Get();
        Users.Clear();
        foreach (var users in result.Models)
        {
            Users.Add(users);
        }

        //Securestorage useremail saved after login 
        var userEmail = Preferences.Get("email", "");

        var user = Users.Where(x => x.UserEmail == UserEmail).FirstOrDefault();

        if (user != null)
        {
            UserFamilyName = user.UserFamilyName;
            UserStreetName = user.UserStreetName;
            UserStreetNumber = user.UserStreetNumber;
            UserZIPCode = user.UserZIPCode;
            UserCity = user.UserCity;
            UserCountry = user.UserCountry;
            UserPhone = user.UserPhone;
            UserEmail = user.UserEmail;
            ID = user.ID;
        }
        else
        {
            UserEmail = userEmail;
            ID = ID;
        }


    }

    //file upload
    IList<IBrowserFile> _files = new List<IBrowserFile>();
    private void UploadFiles(IBrowserFile file)
    {
        _files.Add(file);
        //TODO upload the files to supabase bucket
    }

    //Save data to supabase
    private void Ok()
    {

        MudDialog.Close(DialogResult.Ok(true));
    }
}
